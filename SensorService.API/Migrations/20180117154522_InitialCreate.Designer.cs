// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using SensorService.API.Models;

namespace SensorService.API.Migrations
{
    [DbContext(typeof(SensorContext))]
    [Migration("20180117154522_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("SensorAPI.Models.Device", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SensorAPI.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DeviceId");

                    b.Property<string>("SensorKey");

                    b.Property<int>("SensorType");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Sensor");
                });

            modelBuilder.Entity("SensorAPI.Models.SensorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int?>("SensorId");

                    b.Property<long>("Value");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("SensorData");
                });

            modelBuilder.Entity("SensorAPI.Models.Sensor", b =>
                {
                    b.HasOne("SensorAPI.Models.Device")
                        .WithMany("Sensors")
                        .HasForeignKey("DeviceId");
                });

            modelBuilder.Entity("SensorAPI.Models.SensorData", b =>
                {
                    b.HasOne("SensorAPI.Models.Sensor")
                        .WithMany("Data")
                        .HasForeignKey("SensorId");
                });
#pragma warning restore 612, 618
        }
    }
}
